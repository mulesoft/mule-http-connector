<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns="http://www.mulesoft.org/schema/mule/core"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xmlns:http="http://www.mulesoft.org/schema/mule/http"
      xmlns:test="http://www.mulesoft.org/schema/mule/test"
      xsi:schemaLocation="
               http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
               http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
               http://www.mulesoft.org/schema/mule/test http://www.mulesoft.org/schema/mule/test/current/mule-test.xsd">

    <object name="trackPassageMessageProcessor" class="org.mule.test.http.functional.listener.AbstractHttpListenerErrorHandlingTestCase$TrackPassageMessageProcessor"/>
    <object name="injectStreamProcessor" class="org.mule.test.http.functional.listener.AbstractHttpListenerErrorHandlingTestCase$InjectStreamProcessor"/>

    <http:listener-config name="listenerConfig">
        <http:listener-connection host="localhost" port="${port}"/>
    </http:listener-config>

    <flow name="exceptionBuildingResponseParameters">
        <http:listener config-ref="listenerConfig" path="/exceptionBuildingResponseParameters">
            <http:response>
                <http:headers>
                    #[{ Content-Type: contentType}]
                </http:headers>
            </http:response>
        </http:listener>
        <flow-ref name="injectStreamProcessor"/>
        <error-handler>
            <on-error-continue type="EXPRESSION">
                <flow-ref name="trackPassageMessageProcessor"/>
                <set-payload value="#['Exception Handled']"/>
            </on-error-continue>
            <on-error-continue>
                <set-payload value="Error."/>
            </on-error-continue>
        </error-handler>
    </flow>

    <flow name="exceptionPropagationFlow">
        <http:listener config-ref="listenerConfig" path="/exceptionPropagation">
            <http:error-response>
                <http:body>#[payload]</http:body>
                <http:headers>#[{'headerName':vars.myHeader}]</http:headers>
            </http:error-response>
        </http:listener>
        <test:processor throwException="true"/>
        <error-handler>
            <on-error-propagate>
                <set-payload value="#['An error occurred: ' ++ error.description]"/>
                <set-variable variableName="myHeader" value="headerValue"/>
            </on-error-propagate>
        </error-handler>
    </flow>

    <flow name="exceptionBuildingResponse">
        <http:listener config-ref="listenerConfig" path="/exceptionBuildingResponse" responseStreamingMode="NEVER" />
        <flow-ref name="injectStreamProcessor"/>
        <error-handler>
            <on-error-propagate type="ANY">
                <flow-ref name="trackPassageMessageProcessor"/>
            </on-error-propagate>
        </error-handler>
    </flow>

    <flow name="exceptionBuildingErrorResponse">
        <http:listener config-ref="listenerConfig" path="/exceptionBuildingErrorResponse" responseStreamingMode="NEVER">
            <http:error-response>
                <http:body>#[payload]</http:body>
            </http:error-response>
        </http:listener>
        <set-payload value="#[thisFails]"/>
        <error-handler>
            <on-error-propagate type="EXPRESSION">
                <flow-ref name="trackPassageMessageProcessor"/>
                <flow-ref name="injectStreamProcessor"/>
            </on-error-propagate>
            <on-error-continue type="ANY">
                <set-payload value="#['Exception Handled']"/>
            </on-error-continue>
        </error-handler>
    </flow>
</mule>
